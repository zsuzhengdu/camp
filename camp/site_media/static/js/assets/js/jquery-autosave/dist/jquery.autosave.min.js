/**
 * @fileOverview jQuery.autosave
 *
 * @author Kyle Florence
 * @website https://github.com/kflorence/jquery-autosave
 * @version 1.1.5.1
 *
 * Inspired by the jQuery.autosave plugin written by Raymond Julin,
 * Mads Erik Forberg and Simen Graaten.
 *
 * Dual licensed under the MIT and BSD Licenses.
 */
(function(f,e,a,h){var g=function(m,j,l,o){var k=f(m),i=/^(checked|selectedIndex)$/,n=("onpropertychange" in a.body);if(!k.length||typeof j!=="string"){return k}if(j!=="change"){return k.bind(j,o)}k.each(function(){j=n&&(this.type==="checkbox"||this.tagName.toLowerCase()==="select"&&this.multiple)?"propertychange":"change";f(this).bind([j,l].join("."),function(p){if(p.type!=="propertychange"||i.test(e.event.propertyName)){o.call(this,p)}})})};var b=function(l,j){var i={options:{}},k=typeof l;if(k==="function"){i.method=l}else{if(k==="string"&&j[l]){i.method=j[l].method}else{if(k==="object"){k=typeof l.method;if(k==="function"){i.method=l.method}else{if(k==="string"&&j[l.method]){i.method=j[l.method].method;i.options=f.extend(true,i.options,j[l.method].options,l.options)}}}}}return i};var c=f.type||(function(){var i={},j=Object.prototype.toString;f.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(l,k){i["[object "+k+"]"]=k.toLowerCase()});return function(k){return k==null?String(k):i[j.call(k)]||"object"}})();f.autosave={timer:0,$queues:f({}),options:{namespace:"autosave",callbacks:{trigger:"change",scope:null,data:"serialize",condition:null,save:"ajax"},events:{save:"save",saved:"saved",changed:"changed",modified:"modified"},classes:{changed:"changed",modified:"modified",ignore:"ignore"}},initialize:function(l,q){var n=this;f.extend(this,{context:l.context||a,selector:l.selector||l,options:f.extend(true,{},this.options,q)});if(this.elements().length){var m,o=this.forms(),i=this.inputs();o.data(this.options.namespace,this);f.each(this.options.events,function(s,r){n.options.events[s]=[r,n.options.namespace].join(".")});f.each(this.options.classes,function(r,s){n.options.classes[r]=[n.options.namespace,s].join("-")});f.each(this.options.callbacks,function(r,s){m=[];if(s){f.each(f.isArray(s)?s:[s],function(t,u){u=b(u,n.callbacks[r]);if(f.isFunction(u.method)){m.push(u)}})}n.options.callbacks[r]=m});o.bind([this.options.events.save,this.options.namespace].join("."),function(s,r){n.save(r,s.type)});g(i,"change",this.options.namespace,function(r){f(this).addClass(n.options.classes.changed);f(this.form).triggerHandler(n.options.events.changed,[this])});var j=a.createElement("input");var p=("oninput" in j);if(!p){j.setAttribute("oninput","return;");p=typeof j.oninput==="function"}j=null;var k=p?"input":"keyup";i.bind([k,this.options.namespace].join("."),function(r){f(this).addClass(n.options.classes.modified);f(this.form).triggerHandler(n.options.events.modified,[this])});f.each(this.options.callbacks.trigger,function(s,r){r.method.call(n,r.options)})}return l},elements:function(i,j){i=i||this.selector;j=j||this.context;return f(i,j).filter(function(){return(this.elements||this.form)})},forms:function(i){return f(f.unique(this.elements(i).map(function(){return this.elements?this:this.form}).get()))},inputs:function(i){return this.elements(i).map(function(){return this.elements?f.makeArray(f(this).find(":input")):this})},validInputs:function(i){var j=this;return this.inputs(i).filter(function(){return !f(this).hasClass(j.options.classes.ignore)})},changedInputs:function(i){var j=this;return this.inputs(i).filter(function(){return f(this).hasClass(j.options.classes.changed)})},modifiedInputs:function(i){var j=this;return this.inputs(i).filter(function(){return f(this).hasClass(j.options.classes.modified)})},startInterval:function(j){var i=this;j=j||this.interval;if(this.timer){this.stopInterval()}if(!isNaN(parseInt(j))){this.timer=setTimeout(function(){i.save(false,i.timer)},j)}},stopInterval:function(){clearTimeout(this.timer);this.timer=null},save:function(i,k){var j=this,n=false,l=this.validInputs(i);if(this.options.callbacks.save.length){f.each(this.options.callbacks.scope,function(p,q){l=q.method.call(j,q.options,l)});if(l.length){var o,m=true;f.each(this.options.callbacks.data,function(p,q){o=q.method.call(j,q.options,l,o)});f.each(this.options.callbacks.condition,function(p,q){return(m=q.method.call(j,q.options,l,o,k))!==false});if(m){f.each(this.options.callbacks.save,function(p,q){j.$queues.queue("save",function(){if(q.method.call(j,q.options,o)!==false){j.next("save")}})});n=true}}}this.next("save",n)},next:function(k,j){var i=this.$queues.queue(k);if(i&&i.length){this.$queues.dequeue(k)}else{this.finished(i,k,j)}},finished:function(i,l,k,j){if(l==="save"){if(i){this.forms().triggerHandler(this.options.events.saved)}if(k!==false){this.changedInputs().removeClass(this.options.classes.changed)}if(j!==false){this.modifiedInputs().removeClass(this.options.classes.modified)}if(this.timer){this.startInterval()}}}};var d=f.autosave.callbacks={};f.each(f.autosave.options.callbacks,function(i){d[i]={}});f.extend(d.trigger,{change:{method:function(){var i=this;this.forms().bind([this.options.events.changed,this.options.namespace].join("."),function(k,j){i.save(j,k.type)})}},modify:{method:function(){var i=this;this.forms().bind([this.options.events.modified,this.options.namespace].join("."),function(k,j){i.save(j,k.type)})}},interval:{method:function(i){if(!isNaN(parseInt(i.interval))){this.startInterval(this.interval=i.interval)}},options:{interval:30000}}});f.extend(d.scope,{all:{method:function(){return this.validInputs()}},changed:{method:function(){return this.changedInputs()}},modified:{method:function(){return this.modifiedInputs()}}});f.extend(d.data,{serialize:{method:function(i,j){return j.serialize()}},serializeArray:{method:function(i,j){return j.serializeArray()}},serializeObject:{method:function(i,j){var k={};f.each(j.serializeArray(),function(m,p){var q=p.name,l=p.value;k[q]=k[q]===h?l:f.isArray(k[q])?k[q].concat(l):[k[q],l]});return k}}});f.extend(d.condition,{interval:{method:function(j,k,l,i){return(!this.timer||this.timer===i)}},changed:{method:function(){return this.changedInputs().length>0}},modified:{method:function(){return this.modifiedInputs().length>0}}});f.extend(d.save,{ajax:{method:function(k,m){var j=this,n=f.extend({},k);n.complete=function(p,o){if(f.isFunction(k.complete)){k.complete.apply(j,arguments)}j.next("save")};if(f.isFunction(n.data)){n.data=n.data.call(j,m)}var l=c(m),i=c(n.data);if(i=="undefined"){n.data=m}else{if(l==i){switch(l){case"array":n.data=f.merge(m,n.data);break;case"object":n.data=f.extend(m,n.data);break;case"string":n.data=m+(m.length?"&":"")+n.data;break}}else{throw"Cannot merge form data with options data, must be of same type."}}f.ajax(n);return false},options:{url:e.location.href}}});f.fn.autosave=function(i){return f.extend({},f.autosave).initialize(this,i)}})(jQuery,window,document);
